---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';

// Get all research markdown files
const researchPosts = await Astro.glob('./research/*.md');

// Sort by date (newest first)
const sortedPosts = researchPosts.sort((a, b) => {
  const dateA = new Date(a.frontmatter.date || '1970-01-01');
  const dateB = new Date(b.frontmatter.date || '1970-01-01');
  return dateB.getTime() - dateA.getTime();
});

function formatDate(dateString: string) {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.toLocaleDateString('ja-JP', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout title="深度研究アーカイブ">
  <Header />
  
  <div class="mb-8">
    <h2 class="text-2xl font-semibold text-gray-800 mb-4">研究結果アーカイブ</h2>
    <p class="text-gray-600 mb-6">
      これまでに作成した調査結果ページの一覧です。各項目をクリックして詳細をご覧ください。
    </p>
  </div>

  {sortedPosts.length === 0 ? (
    <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center">
      <p class="text-yellow-800">
        まだ研究結果が登録されていません。<br />
        <code class="bg-yellow-100 px-2 py-1 rounded text-sm">src/pages/research/</code> 
        ディレクトリにMarkdownファイルを追加してください。
      </p>
    </div>
  ) : (
    <div class="grid gap-6">
      {sortedPosts.map((post) => (
        <article class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
          <div class="flex justify-between items-start mb-3">
            <h3 class="text-xl font-semibold text-gray-900 mb-2">
              <a 
                href={post.url} 
                class="hover:text-blue-600 transition-colors"
              >
                {post.frontmatter.title || 'タイトルなし'}
              </a>
            </h3>
            {post.frontmatter.date && (
              <time class="text-sm text-gray-500 shrink-0">
                {formatDate(post.frontmatter.date)}
              </time>
            )}
          </div>
          
          {post.frontmatter.description && (
            <p class="text-gray-600 mb-4 line-clamp-3">
              {post.frontmatter.description}
            </p>
          )}
          
          {post.frontmatter.tags && (
            <div class="flex flex-wrap gap-2 mb-4">
              {post.frontmatter.tags.map((tag: string) => (
                <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                  {tag}
                </span>
              ))}
            </div>
          )}
          
          <a 
            href={post.url}
            class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium text-sm"
          >
            詳細を読む
            <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        </article>
      ))}
    </div>
  )}
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>